AWSTemplateFormatVersion: 2010-09-09

Description: Reference Architecture to host a CF Name. Designed to be launched in eu-west2. 

Metadata:
  Author: Reyan Ahmed
  Email: aws.reyan@gmail.com

  AWS::CloudFormation::Interface:

    ParameterGroups:
    - Label:
        default: Amazon VPC Parameters
      Parameters:
      #VPC Parameters
      - NumberOfAZs
      - AvailabilityZones
      - VpcCidr
      - VpcTenancy
      - PublicSubnet1Cidr
      - PublicSubnet2Cidr
      - PublicSubnet3Cidr
      - PrivateSubnet1Cidr
      - PrivateSubnet2Cidr
      - PrivateSubnet3Cidr
      #EC2 Parameters
      - EC2KeyPair #//TODO:
      - InstanceType
      - AMI
      - InstanceSecurityGroup #/TODO:
      - InstanceSubnet #/TODO:
      #EIP Association
      - ElasticIpId
      - EIPAssociation
      #RDS Parameters
      - DbInstanceType
      - DbMasterUsername
      - DbMasterPassword
      - DatabaseName
      - DatabaseEncryption
      - DatabaseCMK
      - DatabaseSecurityGroup
      - DbNumberOfSubnets
      - Subnet



    ParameterLabels:
      #VPC Parameter Labels
      NumberOfAZs:
        default: Number of Availability Zones
      AvailabilityZones:
        default: Availability Zones
      PublicSubnet1Cidr:
        default: Public Subnet 1
      PublicSubnet2Cidr:
        default: Public Subnet 2
      PublicSubnet3Cidr:
        default: Public Subnet 3
      PrivateSubnet1Cidr:
        default: Private Subnet 1 
      PrivateSubnet2Cidr:
        default: Private Subnet 2
      PrivateSubnet3Cidr:
        default: Private Subnet 3
      #EC2 Parameter Labels
      EC2KeyPair:
        default: EC2 Key Pair
      InstanceType:
        default: Instance Type
      EIPAssociation:
        default: EIP Association
      AMI:
        default: Select AMI
      #RDS Parameter Labels
      DbInstanceType:
        default: DB Instance Engine
      DbMasterUsername:
        default: DB Master Username
      DbMasterPassword:
        default: DB Master Password
      DatabaseName: 
        default: Database Name
      DatabaseEncryption:
        default: Database Encryption Type
      DatabaseCMK:
        default: AWS-KMS Customer Master Key
      DatabaseSecurityGroup:
        default: Database Security Group
      DbNumberOfSubnets:
        default: Number of Subnets
      Subnet:
        default: Subnets
      


Parameters:
  #VPC Parameters
  NumberOfAZs:
    AllowedValues:
    - 2
    - 3
    Default: 2
    Description: Select Number of Availability Zones to use in the VPC. Must match your
      selections in the list of Availability Zones.
    Type: Number
  AvailabilityZones:
    Description: 'Select from List of Availability Zones to use for the subnets in this VPC.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VpcCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: Enter CIDR block for the VPC
    Type: String
  VpcTenancy:
    AllowedValues:
    - default
    - dedicated
    Default: default
    Description: Select Tenancy to launch VPC in
    Type: String
  EnvironmentTags:
    AllowedValues:
    - Development
    - Testing
    - Production
    Default: Development
    Description: Select Name Environment
    Type: String

  #VPCSubnetParameters
  PublicSubnet1Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.201.0/24
    Description: CIDR block for Public subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.202.0/24
    Description: CIDR block for Public subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet3Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.203.0/24
    Description: CIDR block for Public subnet 3 located in Availability Zone 3
    Type: String
  PrivateSubnet1Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.100.0/24
    Description: CIDR block for data subnet 0 located in Availability Zone 0
    Type: String
  PrivateSubnet2Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.101.0/24
    Description: CIDR block for data subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet3Cidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.102.0/24
    Description: CIDR block for data subnet 2 located in Availability Zone 2
    Type: String

  #EC2 Parameters
  EC2KeyPair:
    AllowedPattern: ^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Default: t2.micro
    Description: Select Instance Type
    Type: String
  EIPAssociation:
    Description: Select EIP ID to associate
    Type: String
  AMI:
    Description: Select AMI to use
    Type: String
    Default: ami-08ca3fed11864d6bb
  
  #RDS Parameters
    DbInstanceType:
      Description: Enter Database Instance Class
      Type: String
      Default: db.t3.micro
    DbMasterUsername:
      AllowedPattern: ^([a-zA-Z0-9]*)$
      Description: Enter RDS master username
      ConstraintDescription: Must contain only alphanumeric characters (minimum 8; maximum 16).
      MaxLength: 16
      MinLength: 8
      Type: String
    DbMasterPassword:
      AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
      ConstraintDescription: Must have letters, numbers and at least one of the following characters '_'`~!#$%^&*()_+,-    
      Description: RDS master password.
      MaxLength: 41
      MinLength: 8
      NoEcho: true
      Type: String
    DatabaseName:
      AllowedPattern: ^([a-zA-Z0-9]*)$
      Description: RDS master database name
      Type: String
    DatabaseEncryption:
      AllowedValues:
        - true
        - false
      Default: True
      Description: Indicates whether the DB instances in the cluster are encrypted
      Type: String
    DatabaseCMK:
      Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
      Type: String
  


Conditions:

  NumberOfAZs1:
      !Equals [ '1', !Ref NumberOfAZs ]
  NumberOfAZs2:
      !Equals [ '2', !Ref NumberOfAZs ]
  NumberOfAZs3:
      !Equals [ '3', !Ref NumberOfAZs ]
  AZ0: !Or
    - !Condition NumberOfAZs1
    - !Condition NumberOfAZs2
    - !Condition NumberOfAZs3
  AZ1: !Or
    - !Condition NumberOfAZs2
    - !Condition NumberOfAZs3
  AZ2: !Condition NumberOfAZs3


Resources:
  #VPC Resource Creation
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Vpc / ', !Ref 'AWS::StackName' ] ]
        - Key: Environment
          Value: !Ref EnvironmentTags

  PrivateSubnet1:
    Condition: AZ0
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
      CidrBlock: !Ref PrivateSubnet1Cidr
      #MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', ['PRSub1 / ', !Ref 'AWS::StackName'] ]
        - Key: SubnetType
          Value: Private
        - Key: Environment
          Value: !Ref EnvironmentTags
      VpcId: !Ref Vpc
  PrivateSubnet2:
    Condition: AZ1
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !Ref AvailabilityZones]
      CidrBlock: !Ref PrivateSubnet2Cidr
      #MapPublicIPOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', ['PRSub2 / ', !Ref 'AWS::StackName'] ]
        - Key: Environment
          Value: !Ref EnvironmentTags
        - Key: SubnetType
          Value: Private
      VpcId: !Ref Vpc
  PrivateSubnet3:
    Condition: AZ2
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !Ref AvailabilityZones]
      CidrBlock: !Ref PrivateSubnet3Cidr
      #MapPublicIPOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', ['PRSub3 / ', !Ref 'AWS::StackName'] ]
        - Key: Environment
          Value: !Ref EnvironmentTags
        - Key: SubnetType
          Value: Private
      VpcId: !Ref Vpc
  PublicSubnet1:
    Condition: AZ0
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', ['PUSub1 / ', !Ref 'AWS::StackName'] ]
        - Key: Environment
          Value: !Ref EnvironmentTags
        - Key: SubnetType
          Value: Public
      VpcId: !Ref Vpc  
  PublicSubnet2:
    Condition: AZ1
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !Ref AvailabilityZones ]
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', ['PUSub2 / ', !Ref 'AWS::StackName'] ]
        - Key: Environment
          Value: !Ref EnvironmentTags
        - Key: SubnetType
          Value: Public
      VpcId: !Ref Vpc 
  PublicSubnet3:
    Condition: AZ2
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !Ref AvailabilityZones ]
      CidrBlock: !Ref PublicSubnet3Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', ['PUSub3 / ', !Ref 'AWS::StackName'] ]
        - Key: Environment
          Value: !Ref EnvironmentTags
        - Key: SubnetType
          Value: Public
      VpcId: !Ref Vpc

  #EC2 Resource Creation
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
      KeyName: !Ref EC2KeyPair
      SecurityGroups:
      - !Ref AppSecurityGroup
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMI
      SubnetId: !Ref PublicSubnet

  #EIP Resource Creation
  EIP:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !Ref EIPAssociation
      InstanceId: !Ref EC2

  #Internet Gateway Configuration
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'InternetGateway / ', !Ref 'AWS::StackName' ] ]
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc  

  #Route Table Configuration
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'PublicRouteTable / ', !Ref 'AWS::StackName' ] ]
        - Key: Network
          Value: Public
      VpcId: !Ref Vpc
  PublicRouteTableAssociation0:
    Condition: AZ0
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicRouteTableAssociation1:
    Condition: AZ1
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PublicRouteTableAssociation2:
    Condition: AZ2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

#RDS Creation
  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      BackupRetentionPeriod: 30
      DatabaseName: !Ref DatabaseName
     DBSubnetGroupName: !Ref PrivateSubnet //TODO:DataSubnetGroup
      Engine: mariadb
      KmsKeyId:
        !If [ UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref DatabaseCmk ]
      MasterUsername: !If [ NoSnapshot, !Ref DatabaseMasterUsername, !Ref 'AWS::NoValue']
      MasterUserPassword: !If [ NoSnapshot, !Ref DatabaseMasterPassword, !Ref 'AWS::NoValue']
      Port: 3306
      StorageEncrypted: !Ref DatabaseEncrpytedBoolean



Outputs:
  
  Vpc:
    Value: !Ref Vpc
  VpcCidr:
    Value: !Ref VpcCidr
  PublicSubnet1:
    Condition: AZ0
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Condition: AZ1
    Value: !Ref PublicSubnet2
  PublicSubnet3:
    Condition: AZ2
    Value: !Ref PublicSubnet3
  PrivateSubnet1:
    Condition: AZ0
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Condition: AZ1
    Value: !Ref PrivateSubnet2
  PrivateSubnet3:
    Condition: AZ2
    Value: !Ref PrivateSubnet3
  
  PrivateSubnet:
    Value:
      !If
        [ NumberOfAZs1,
        !Ref PrivateSubnet1, !Ref 'AWS::NoValue', !Ref 'AWS::NoValue' 
        !If
          [ NumberOfAZs2,
          !Join [ ',', [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref 'AWS::NoValue' ] ],
          !If
            [ NumberOfAZs3,
            !Join [ ',', [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3 ] ],
            ]
          ]
        ]

  PublicSubnet:
    Value:
      !If
        [ NumberOfAZs1,
        !Ref PublicSubnet1, !Ref 'AWS::NoValue', !Ref 'AWS::NoValue'
        !If
          [ NumberOfAZs2,
          !Join [ ',', [ !Ref PublicSubnet1, !Ref PublicSubnet2, !Ref 'AWS::NoValue' ] ],
          !If
            [ NumberOfAZs3,
            !Join [ ',', [ !Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3 ] ],
            ]
          ]
        ]
